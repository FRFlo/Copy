name: Build and push Docker image
on:
  push:
    branches:
      - develop
      - docker
    paths:
      - ".github/workflows/docker.yml"
      - ".dockerignore"
      - "Copy/**"

jobs:
  build:
    name: Build image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set variables
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$calculatedSha" >> $GITHUB_OUTPUT
            echo "username=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Copy/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ steps.vars.outputs.username }}:${{ steps.vars.outputs.short_sha }}
            ghcr.io/${{ steps.vars.outputs.username }}:latest
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.HUB_USERNAME }}
          password: ${{ secrets.HUB_TOKEN }}
      - name: Push to Docker Hub
        run: |
            docker tag ghcr.io/${{ steps.vars.outputs.username }}:${{ steps.vars.outputs.short_sha }} ${{ steps.vars.outputs.username }}:${{ steps.vars.outputs.short_sha }}
            docker push ${{ steps.vars.outputs.username }}:${{ steps.vars.outputs.short_sha }}
            docker tag ghcr.io/${{ steps.vars.outputs.username }}:${{ steps.vars.outputs.short_sha }} ${{ steps.vars.outputs.username }}:latest
            docker push ${{ steps.vars.outputs.username }}:latest
